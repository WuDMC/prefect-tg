# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: prefect-gcp-test
prefect-version: 3.1.11

# build section allows you to manage and build docker images
build:
- prefect_docker.deployments.steps.build_docker_image:
    id: build_image
    requires: prefect-docker>=0.3.1
    image_name: europe-southwest1-docker.pkg.dev/prefect-wu/prefect/prefect-tg
    tag: latest
    dockerfile: _Dockerfile

# push section allows you to manage if and how this project is uploaded to remote locations
push:
- prefect_docker.deployments.steps.push_docker_image:
    requires: prefect-docker>=0.3.1
    image_name: '{{ build_image.image_name }}'
    tag: '{{ build_image.tag }}'

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
- prefect.deployments.steps.set_working_directory:
    directory: /opt/prefect/prefect-tg

deployments:
# deployment configurations
- name: f1_find_msgs4parsing
  version:
  tags: []
  concurrency_limit:
  description:
  entrypoint: flows/check_dialogs.py:find_msg_4parsing
  parameters: {}
  work_pool:
    name: gcp-runner
    work_queue_name: default
    job_variables:
      image: '{{ build_image.image }}'
  enforce_parameter_schema: true
  schedules:
    - cron: "0 0,6,12,18 * * *"
      timezone: "Etc/UTC"
- name: f2_parse_msgs
  version:
  tags: []
  concurrency_limit:
  description:
  entrypoint: flows/parse_msgs.py:parse_msg_n_load2gsc
  parameters: {}
  work_pool:
    name: gcp-runner
    work_queue_name: default
    job_variables:
      image: '{{ build_image.image }}'
  enforce_parameter_schema: true
  schedules: []
